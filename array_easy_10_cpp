//https://leetcode.com/explore/interview/card/top-interview-questions-easy/92/array/769/

//果然没过几个日子，我的暴力能力又上了一级

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        unordered_map<char, int> mpr;
        unordered_map<char, int> mpc;
        for(int i = 0;i < 9;i++){
            for(int j = 0;j < 9;j++){
                if(board[i][j] != '.') {mpr[board[i][j]]++; if(mpr[board[i][j]] > 1) return false;}
                if(board[j][i] != '.') {mpc[board[j][i]]++; if(mpc[board[j][i]] > 1) return false;}
            }
            mpr.clear();
            mpc.clear();
        }
        
        unordered_map<char, int> mpcell;
        for(int i = 0;i < 3;i++)
            for(int j = 0;j < 3;j++){
                for(int k = 3*i;k < 3*(i + 1);k++){
                    for(int q = 3*j;q < 3*(j+1);q++)
                        if(board[k][q] != '.'){mpcell[board[k][q]]++;if(mpcell[board[k][q]] > 1) return false;}
                }
                mpcell.clear();
            }
        return true;
    }
};

// 优雅的暴力
class Solution
{
public:
    bool isValidSudoku(vector<vector<char> > &board)
    {
        int used1[9][9] = {0}, used2[9][9] = {0}, used3[9][9] = {0};
        
        for(int i = 0; i < board.size(); ++ i)
            for(int j = 0; j < board[i].size(); ++ j)
                if(board[i][j] != '.')
                {
                    int num = board[i][j] - '0' - 1, k = i / 3 * 3 + j / 3;
                    if(used1[i][num] || used2[j][num] || used3[k][num])
                        return false;
                    used1[i][num] = used2[j][num] = used3[k][num] = 1;
                }
        
        return true;
    }
};
// 这里的k 的涉及非常巧妙优雅
// 相当于用空间换取了时间
// 如果一个数字被用了，那就把那个对应的矩阵的相应的位置，比如是 ’8‘ ,转化为 8 - 1 ,坐标，因为要从0开始的标记用过
// 主要巧妙和优雅的还是i/3*3 + j/3
